name: Article Draft PR

on:
  push:
    branches:
      - blog/*
    paths:
      - "src/content/blog/**.md"

  workflow_dispatch:

jobs:
  create_pr:
    name: Create PR
    runs-on: ubuntu-latest

    steps:
      - name: Create Github Apps Token
        uses: atolycs/create-app-auth@v1
        id: gh_token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Draft Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.gh_token.outputs.token }}
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            const { repo, owner } = context.repo
            
            try {
              const result = await github.rest.pulls.create({
                title: '[CI] Draft Article Works',
                owner: owner,
                repo: repo,
                head: '${{ github.ref_name }}',
                base: 'main',
                body: [
                  'This is a draft PR for ${{ github.ref_name }}',
                  'Auto generated by [actions/github-script](https://github.com/actions/github-script).'
                ].join('\n')
              })
              console.log(`Pull request created: ${result.data.html_url}`)
            } catch (e) {
              console.log(`${e.status} - Pull Request Failed: ${e.message}`)
            }


  build_ssg:
    name: Build Web Page (Preview)
    runs-on: ubuntu-latest

    steps:
      - name: Setup environment
        uses: actions/setup-node@v4

      - name: Create Github Apps Token
        uses: atolycs/create-app-auth@v1
        id: gh_token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PEM }}

      - name: get npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: checkout
        uses: actions/checkout@v4

      - name: cache check
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: setup
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build Honox SSG
        run: npm run build

      - name: Deploy Pages Preview
        uses: cloudflare/wrangler-action@v3
        id: cloudflare_pages_deploy
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy ./dist --project-name=${{ vars.project_name }}

      - name: Commit status
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.gh_token.outputs.token }}
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            const pull_number = context.payload.pull_request?.number;

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: "Cloudflare Pages",
              description: "Launched Preview Site!",
              state: 'success',
              sha,
              target_url: '${{ steps.cloudflare_pages_deploy.outputs.deployment-url }}'
            });

            const pulls = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: '${{ github.ref_name }}',
              base: 'main'
            })
            
            if (pulls.data.length == 1) {

              await github.rest.pulls.createReview({
                ...context.repo,
                pull_number: pulls.data[0].number,
                event: 'COMMENT',
                body: [
                  '# Deploy result',
                  '| Name | Result |',
                  '| ---- | ------ |',
                  '| **Preview URL** | ${{ steps.cloudflare_pages_deploy.outputs.deployment-url }} |',
                  '| **Last commit** |' + sha  + ' |',
                ].join('\n')
              })
            }
